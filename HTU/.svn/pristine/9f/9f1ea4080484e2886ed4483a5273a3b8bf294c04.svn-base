package kr.or.ddit.controller.common;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.service.common.PublicizeBoardService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.BoardVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/common/board/publicize")
@Slf4j
public class PublicizeBoardController {
	
	@Autowired
	PublicizeBoardService publicizeBoardService;
	
	//사업장 목록
		//요청URI : /business/list  또는 /business/list?keyword=개똥이&currentPage=1
		//요청파라미터(HTTP파라미터,QueryString) : keyword=개똥이 또는 keyword= 또는 
		//요청방식 : get
		@RequestMapping(value="/list", method=RequestMethod.GET)
		public ModelAndView list(ModelAndView mav,
				@RequestParam(value="keyword",required=false) String keyword,
				@RequestParam(value="currentPage",required=false,defaultValue="1") int currentPage) {
			log.info("list->keyword : " + keyword);
			log.info("list->currentPage : " + currentPage);
			
			Map<String,Object> map = new HashMap<String,Object>();
			map.put("keyword", keyword);//검색어
			map.put("currentPage", currentPage);//현재 페이지번호
			log.info("list->map : " + map);
			
			List<BoardVO> data = this.publicizeBoardService.list(map);
			log.info("list->data : " + data);
			
			//전체행의 수(검색 포함)
			int total = this.publicizeBoardService.getTotal();
			log.info("list->total : " + total);
			
			//페이징객체
			ArticlePage<BoardVO> articlePage 
				= new ArticlePage<BoardVO>(total, currentPage, 10, data);
			
			//페이징의 번호를 클릭 시 요청될 URL
			articlePage.setUrl("/business/list");
			
			mav.addObject("data", articlePage);
			//forwarding
			mav.setViewName("business/list");
			
			return mav;
		}
	
	/*
	 요청URI : 클래스레벨 + 메소드레벨 = /business/create
	 리턴 타입이 void인 경우 요청URI가 jsp의 경로가 됨
	 */
	@RequestMapping(value="/create",method=RequestMethod.GET)
	public void create(ModelAndView mav) {
		
		//forwarding
//		mav.setViewName("business/create");
		
//		return mav;
	}

}

