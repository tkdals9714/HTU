<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="sec"
	uri="http://www.springframework.org/security/tags"%>
<!-- style.css -->
<!-- <link href="/resources/css/counsel.css" rel="stylesheet" type="text/css"> -->

<%-- <p>${data}</p> --%>
<div class="counsel_box">
	<table>
		<tr>
			<td>순번</td>
			<td>상담종류</td>
			<td>상담신청일</td>
			<td>신청인</td>
			<td>진행상태</td>
			<!-- 상담날짜 이후에 써짐 -->
			<td>상담내역</td>
		</tr>
		<c:forEach var="counselVO" items="${data}" varStatus="stat">
			<tr>
				<td>${stat.count}</td>
				<td>${counselVO.commonDetailVO.comdNm}</td>
				<td>${counselVO.cnslDt}</td>
				<td>${counselVO.userVO.userNm}</td>
				<td>
					<c:choose>
						<c:when test="${counselVO.approvalVO.appYn eq 0}"><button class="btn-two mini green app-btn" type="submit">대기</button></c:when>
						<c:when test="${counselVO.approvalVO.appYn eq 1}"><p class="btn-two mini sky">승인</p></c:when>
						<c:when test="${counselVO.approvalVO.appYn eq 2}"><button class="btn-two mini orange">반려</button></c:when>
					</c:choose>
				</td>
				<td><a href="#none" class="btn-two mini gray">상담내역올리기</a></td>
			</tr>
		</c:forEach>

	</table>
</div>
<script>
	$(".app-btn").each(function(){
		$(this).on("click",function(){
			Swal.fire({
			    /* title: '상담을 취소하시겠습니까?', */
			    text: "상담을 승인하시겠습니까?",
			    icon: "info",
			    /* warning,error,success,info,question */
			    width: 400,
			    /* padding: "4em", */
			    position: "top",
			    showCancelButton: true,
			    showDenyButton: true,
			    confirmButtonColor: "#3085d6",
			    cancelButtonColor: "#555555",
			    denyButtonColor:"#d33",
			    confirmButtonText: "상담승인",
			    cancelButtonText: "뒤로가기",
			    denyButtonText: "상담반려",
			    /* reverseButtons: true, */ // 버튼 순서 거꾸로
			  }).then((result) => {
			    console.log(result);
			    if(result.isConfirmed){
			    	
			    }
			    else if(result.isDenied){
			    	Swal.fire({
			    		title: "반려사유를 기입해주세요",
			    		  input: "text",
			    		  inputAttributes: {
			    		    autocapitalize: "off"
			    		  },
			    		  showCancelButton: true,
			    		  confirmButtonText: "입력",
			    		  cancelButtonText: "취소",
			    	});
			    }
			  });
		})
		
	})
</script>

Swal.fire({
  title: "Submit your Github username",
  input: "text",
  inputAttributes: {
    autocapitalize: "off"
  },
  showCancelButton: true,
  confirmButtonText: "Look up",
  showLoaderOnConfirm: true,
  preConfirm: async (login) => {
    try {
      const githubUrl = `
        https://api.github.com/users/${login}
      `;
      const response = await fetch(githubUrl);
      if (!response.ok) {
        return Swal.showValidationMessage(`
          ${JSON.stringify(await response.json())}
        `);
      }
      return response.json();
    } catch (error) {
      Swal.showValidationMessage(`
        Request failed: ${error}
      `);
    }
  },
  allowOutsideClick: () => !Swal.isLoading()
}).then((result) => {
  if (result.isConfirmed) {
    Swal.fire({
      title: `${result.value.login}'s avatar`,
      imageUrl: result.value.avatar_url
    });
  }
});