<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>

<style>
	/* 여기 스타일 전부 가져다가 복붙하셔야해요  
	본인이 만든 페이지 내용 제일 바깥쪽에 div하나 만들고 "counsel_box" 이런식으로 특별한?클래스이름을 붙여주세요*/
	.objection_box{width:100%; padding:40px; background-color:#ffffff;}
	/* 상단에 있는 제목 (여기서는 상담내역) css입니다
		그대로 복붙하시고 해당div에  .table_topic값 주세요*/
	.objection_box .table_topic{font-size: 20px; padding-bottom:30px;}
	.objection_box .table_topic i{margin-left:10px;}
	/* table입니다 */
	.objection_box table{font-size:14px; width:100%; text-align:center;}
	/* 테이블의 시작부분 타이틀입니다 */
	.table_title{font-size:13px; border-top:1px solid #d1d0d0; border-bottom:1px solid #d1d0d0; height:32px; line-height:32px;}
	.objection_box tr{height:40px;}
	/* 각자 만든 td개수만큼만쓰고 총 합이 100이 되도록 잘 분배해서 쓰세요 이부분 제일 신경써서 해주세요*/
	.objection_box tr td:nth-child(1){width:8%;}
	.objection_box tr td:nth-child(2){width:8%;}
	.objection_box tr td:nth-child(3){width:12%;}
	.objection_box tr td:nth-child(4){width:12%;}
	.objection_box tr td:nth-child(5){width:5%;}
	.objection_box tr td:nth-child(6){width:10%;}
	.objection_box tr td:nth-child(7){width:5%;}
	.objection_box tr td:nth-child(8){width:10%;}
	.objection_box tr td:nth-child(9){width:10%;}
	.objection_box tr td:nth-child(10){width:10%;}
	.objection_box tr td:nth-child(11){width:10%;}
  /* 테이블의 시작부분 타이틀입니다 */
	.table_title{font-size:13px; border-top:1px solid #333333!important; border-bottom:1px solid #333333!important; height:32px; line-height:32px;}
	/* /////////////////여기가 수정시작!!  */
	.objection_box tr{height:40px; border-bottom:1px solid #ebebeb;}
	.objection_box .table_title2{background-color:#EEF1F6;}
	.objection_box tr:hover{background-color:#f2f3f4;}
	.objection_box .table_title2:hover{background-color:#EEF1F6;}
	/* /////////////////여기가 수정끝!!  */
	.objection_box{width:100%; padding:40px; background-color:#ffffff;}
	.objection_form{border:1px solid #d1d0d0; padding:30px; width:100%; border-radius:5px; position:relative;}
	.objection_form_title{display:flex; flex-direction:column; margin-bottom:30px;}
	.objection_form_title p{width:120px; font-size:16px; margin-bottom:15px;}
	.objection_form_title select, .objection_form_title input{font-size:14px; border: 1px solid #d1d0d0; border-radius:3px; padding:5px 15px;}
	.objection_form a:hover{color:#ffffff!important;}
	.objection_form_title input{border: none;}
	.objection_form input:focus{outline:none;}
	.objection_form textarea{resize:none;}
	.objection_form1 table th, .objection_form1 table td{border:1px solid #888888; padding:7px; font-size:14px;}
	.objection_form1 table td{text-wrap:nowrap;}
	.objection_form1 table th{text-align:center; background-color:#ebebeb; padding:3px;}
  .close_bt:hover {background-color: #333;}
</style>

<sec:authentication property="principal.userVO" var="userVO"/>
<div class="objection_box">
  <div style="font-size:12px; color:#888888; margin-bottom: 20px;">
		<span><svg xmlns="http://www.w3.org/2000/svg" height="13" width="13" viewBox="0 0 576 512" style="margin-right: 5px;"><path fill="#888888" d="M575.8 255.5c0 18-15 32.1-32 32.1h-32l.7 160.2c0 2.7-.2 5.4-.5 8.1V472c0 22.1-17.9 40-40 40H456c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1H416 392c-22.1 0-40-17.9-40-40V448 384c0-17.7-14.3-32-32-32H256c-17.7 0-32 14.3-32 32v64 24c0 22.1-17.9 40-40 40H160 128.1c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2H104c-22.1 0-40-17.9-40-40V360c0-.9 0-1.9 .1-2.8V287.6H32c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z"/></svg></span>
		<span style="font-size:12px; color:#888888;">></span>
		<span style="font-size:12px; color:#888888;">성적관리</span>
		<span style="font-size:12px; color:#888888;">></span>
		<span style="font-size:12px; color:#888888;">성적이의신청</span>
		<span style="font-size:12px; color:#888888;">></span>
		<span style="font-size:12px; color:#888888;">이의신청내역</span>
	</div>
  <div class="table_topic">이의신청내역<i class="fa-solid fa-circle-info" style="color: #333333;"></i></div>
  <div class="objection_form">
		<div class="objection_form_title">
			<div style="display: flex; justify-content: space-around;">
				<div>
					<p>소속</p>
					<input value='${creditVO.colNm} ${userVO.studentVO.departmentVO.depNm}' style="width:100%;text-align: left;font-size: 14px;color:#333333;" readonly>
				</div>
				<div>
					<p>학번</p>
					<input value='${userVO.userCd}' style="width:100%;text-align: left;font-size: 14px;color:#333333;" readonly>
				</div>
				<div>
					<p>성명</p>
					<input value='${userVO.userNm}' style="width:100%;text-align: left;font-size: 14px;color:#333333;" readonly>
				</div>
			</div>
		</div>
		<div class="objection_form_title">
			<div style="display: flex; justify-content: space-around;">
				<div>
					<p>수강년도</p>
					<select id="lecaYear" style="width:400px!important;">
					</select>
				</div>
				<div>
					<p>수강학기</p>
					<select id="lecaSem" style="width:400px!important;">
						<option value="1">1</option>
						<option value="2">2</option>
					</select>
				</div>
			</div>
		</div>
	</div>
  <table style="margin-top: 20px;">
		<tr class="table_title table_title2">
			<td>수강년도</td>
			<td>수강학기</td>
			<td>강의명</td>
			<td>이수구분</td>
			<td>학점</td>
			<td>담당교수</td>
			<td>이전등급</td>
      <td>결재일</td>
      <td>신청결과</td>
			<td>변경등급</td>
			<td>비고</td>
		</tr>
		<tbody id="gradeTbody">
		</tbody>
	</table>
</div>


<script>
  const jsonGradeList = JSON.parse('${jsonGradeList}');
	console.log(jsonGradeList);
	const jsonUserVO = JSON.parse('${jsonUserVO}');
	console.log(jsonUserVO);
  
  const stuYear = jsonUserVO.studentVO.stuYear;
  const stuSem = jsonUserVO.studentVO.stuSem;
  const year = new Date().getFullYear();
  function checkSelected() {
    if (stuSem == 1 && stuYear == 1) {
      let txt = "";
      txt = `<option value="\${year}" selected>\${year}</option>`;
      $("#lecaYear").html(txt);
      $("#lecaSem").val("1");
      return;
    }
    if (stuSem == 1 || stuSem == 2) {
      let txt = "";
      for (let i = year - stuYear + 1; i <= year; i++) {
        if (i == year) txt += `<option value="\${i}" selected>\${i}</option>`;
        else txt += `<option value="\${i}">\${i}</option>`;
      }
      $("#lecaYear").html(txt);
      return;
    }
  }
  
  // yyyy-MM-dd 형식
  function getPattern(dateNo) {
    const date = new Date(dateNo);
    return `\${date.getFullYear()}-\${(date.getMonth() + 1).toString().padStart(2, '0')}-\${date.getDate().toString().padStart(2, '0')}`;
  }
  
  // 총점을 등급으로
	function getGrade(lecgSum) {
		if (lecgSum == null) return "-"
		else {
			if (lecgSum >= 95) return "A+";
			else if (lecgSum >= 90) return "A";
			else if (lecgSum >= 85) return "B+";
			else if (lecgSum >= 80) return "B";
			else if (lecgSum >= 75) return "C+";
			else if (lecgSum >= 70) return "C";
			else if (lecgSum >= 65) return "D+";
			else if (lecgSum >= 60) return "D";
			else return "F";
		}
	};
	
	// 등급을 평점으로
	function getScore(grade) {
		if (grade == "A+") return 4.5;
		else if (grade == "A") return 4.0;
		else if (grade == "B+") return 3.5;
		else if (grade == "B") return 3.0;
		else if (grade == "C+") return 2.5;
		else if (grade == "C") return 2.0;
		else if (grade == "D+") return 1.5;
		else if (grade == "D") return 1;
		else if (grade == "F") return 0;
		else if (grade == "-") return "-";
	};
	
	// 이수구분
	function getType(lecaType) {
		if (lecaType == 0) return `전공필수`;
		else if (lecaType == 1) return `전공선택`;
		else if (lecaType == 2) return `교양필수`;
		else if (lecaType == 3) return `교양선택`;
	}
  
  function renderObjectionList() {
    const lecaYear = $("#lecaYear").val();
    const lecaSem = $("#lecaSem").val();
    let txt = "";
    jsonGradeList.forEach(grade => {
      if (grade.gradeCriteriaVO.lectureVO.lectureApplyVO.lecaYear == lecaYear && grade.gradeCriteriaVO.lectureVO.lectureApplyVO.lecaSem == lecaSem) {
        if (grade.objectionVO.appCd != null) {
          txt += `
            <tr>
              <td>\${lecaYear}</td>
              <td>\${lecaSem}</td>
              <td>\${grade.gradeCriteriaVO.lectureVO.lectureApplyVO.lecaNm}</td>
              <td>\${getType(grade.gradeCriteriaVO.lectureVO.lectureApplyVO.lecaType)}</td>
              <td>\${grade.gradeCriteriaVO.lectureVO.lectureApplyVO.lecaCrd}</td>
              <td>\${grade.gradeCriteriaVO.lectureVO.lectureApplyVO.professorVO.userVO.userNm}</td>
              <td>\${getGrade(grade.lecgSum)}</td>
              <td>\${getPattern(grade.objectionVO.approvalVO.appProdt)}</td>
              `
          if (grade.objectionVO.approvalVO.appYn == 1) {
            txt += `
                <td>승인</td>
                <td>\${grade.lecgGrade}</td>
                <td></td>
                </tr>
                `
          } else if (grade.objectionVO.approvalVO.appYn == 2) {
            txt += `
                <td>반려</td>
                <td>-</td>
                <td><button class="btn-two bur mini">반려사유</button></td>
              </tr>
            `
          } else if (grade.objectionVO.approvalVO.appYn == 0) {
            txt += `
                <td>대기</td>
                <td>-</td>
                <td></td>
              </tr>
            `
          } 
        }
      };
      if (txt.length < 1) {
        txt = '<tr><td colspan="10">이의신청 내역이 없습니다.</td></tr>'
      }
    })
    $("#gradeTbody").html(txt);
  }
  
  checkSelected();
  renderObjectionList();
  
  $("#lecaYear").on("change", function() {
    renderObjectionList();
  });
  
  $("#lecaSem").on("change", function() {
    renderObjectionList();
  });
  
  
  $(function() {
    
  });
</script>