<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<script type="text/javascript" src="/resources/ckeditor/ckeditor.js"></script>
<style>
.divMailbox .mailHeaderName {
	font-size: 20px;
	padding: 30px;
	font-weight: 600;
}

input:focus {
	outline: none;
}

input[type=file]::file-selector-button {
	width: 120px;
	height: 30px;
	color: #333333;
	background-color: transparent;
	border: 1px solid #dadada;
	border-radius: 10px;
	cursor: pointer;
}

input[type=file]::file-selector-button:hover {
	background-color: #dadada;
	color: #fff;
}

.mail_toolbar {
	margin-left: 25px;
	padding: 10px;
	webkit-box-flex: 0;
	-webkit-flex: 0 0 auto;
	flex: 0 0 auto;
	position: relative;
	top: auto;
	right: auto;
	left: auto;
	margin: 0 25px;
	-webkit-box-flex: 0;
	flex: 0 0 auto;
	position: relative;
	top: auto;
	right: auto;
	left: auto;
	-webkit-box-align: center;
	align-items: center;
	border-top: 1px solid #dadada;
	border-bottom: 1px solid #dadada;
	justify-content: space-between;
}

.mail_toolbar.type_write {
	font-size: 14px;
	display: flex;
	flex-wrap: wrap;
	height: 50px;
	margin-left: 0px;
	margin-right: 0px;
}

.button_group {
	display: flex;
	width: 350px;
}

.mail_toolbar_task .button_write_task {
	width: 50px;
	height: 28px;
	text-align: center;
	margin: 0 5px 0 1100px;
	padding: 3px 10px;
	border: 1px solid #7e1717;
	border-radius: 5px;
	font-weight: bold;
	color: #7e1717;
	line-height: 20px;
	letter-spacing: 0;
}
.mail_toolbar_task .button_write_auto {
	width: 80px;
	height: 28px;
	text-align: center;
	margin: 0 0px 0 9px;
	padding: 3px 10px;
	border: 1px solid #7e1717;
	border-radius: 5px;
	font-weight: bold;
	color: #7e1717;
	line-height: 20px;
	letter-spacing: 0;
}

.mail_btn {
	/* 	margin: 0; */
	margin: 0 5px 0 9px;
	padding: 3px 10px;
	outline: none;
	line-height: 20px;
	background-color: transparent;
	cursor: pointer;
	touch-action: manipulation;
	border: 0;
}

.mail_toolbar_task .button_task:hover {
	border: 1px solid #dadada;
	border-radius: 5px;
}

.mail_toolbar_task .button_task_wrap {
	margin-right: 0;
	margin: 0 29px 0 0;
	font-weight: normal;
}

.mail_write_option {
	padding-top: 10px;
	font-size: 14px;
	font-weight: 600;
}

.mail_write_option_item_inner .title_area {
	align-items: center;
	width: 160px;
	padding: 5px 0 6px 11px;
}

.mail_write_option_item_inner .option_area {
	border-bottom: 1px solid #dadada;
	width: 100%;
}

.mail_write_option_item_inner {
	display: flex;
}

.editor_area {
	margin-top: 20px;
}

.mail_write_option_item_inner .user_input {
	padding: 2px 0;
	width: 100%;
	background-color: transparent;
}

.mail_write_option_item_inner .option_input {
	padding: 6px 0;
	width: 100%;
	background-color: transparent;
}

.mail_write_option_item.file .option_area {
	border-bottom: 0;
}

.mail_write_option_item_inner .blind {
	padding: 6px 0;
	width: 100%;
	background-color: transparent;
}

.cke_contents cke_reset {
	height: 500px;
}

.autocomplete>div {
	z-index: 999;
	background: #ffffff;
	padding: .2rem .6rem;
	height: 30px;
}

.autocomplete>div.active {
	background: #e0e5f6;
	color: #000;
}

.autocomplete {
	position: absolute;
	max-height: 90px;
	overflow: auto;
}

mark {
	background: #febf0090;
}
</style>

<sec:authorize access="isAuthenticated()">
    <sec:authentication property="principal.userVO" var="userVO" />
</sec:authorize>

<div class="divMailbox" style="background-color: #ffffff;">
	<div class="mailHeader">
		<div class="mailHeaderName">과제등록</div>
	</div>
	<!-- ----------------------------------------------------------------------------- -->
 <form role="form" id="taskFrm" action="/professor/task/create?${_csrf.parameterName}=${_csrf.token}" method="post" enctype="multipart/form-data">
		<div class="mail_toolbar type_write">
			<div class="mail_toolbar_task">
				<div class="button_group" style="display: flex;">
					<div style="flex: 1;"><button id="taskSubmit" type="button" 
						class="mail_btn button_write_task">등록</button></div>
					<div style="flex: 1;"><button id="taskAuto" type="button" 
						class="mail_btn button_write_auto">자동완성</button></div>
				</div>
			</div>
		</div>
		<div class="mail_write_option">

			<div class="mail_write_option_item subject">
				<div class="mail_write_option_item_inner">
					<div class="title_area">
						<strong class="option_title"><label for="subject_title">과제명</label></strong>
					</div>
					<div class="option_area">
						<div class="option_input_cover">
							<input name="taskNm" id="subject_title" type="text"
								class="option_input" tabindex="4" maxlength="180"
								required="required">
						<input type="hidden" id="lecCd" name="lecCd" value="${param.lecCd}" />
						</div>
					</div>
				</div>
			</div>
			<div class="mail_write_option_item file expanded">
				<div class="mail_write_option_item_inner">
					<div class="title_area">
						<strong class="option_title">첨부파일</strong>
					</div>
					<div class="option_area">
						<div class="file_upload">
							<label class="button_upload"><span class="blind">
							</span><input id="ATTACH_LOCAL_FILE_ELEMENT_ID" type="file"
								class="blind" name="uploadFiles" multiple="multiple"></label>
							<p class="description"></p>
						</div>
					</div>
				</div>
			</div>
			<div class="mail_write_option_item file expanded">
				<div class="mail_write_option_item_inner">
					<div class="title_area">
						<strong class="option_title">과제마감일</strong>
					</div>
					<div class="option_area">
						<div class="file_upload">
							<label class="button_upload"><span class="blind">
							</span><input id="taskEddt" type="date"
								class="blind" name="taskEddt"></label>
							<p class="description"></p>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="editor_area">
			<textarea rows="100" cols="30" id="taskCon" name="taskCon"></textarea>
		</div>
		<sec:csrfInput />
	</form>
</div>


<script type="text/javascript">
$(function(){
	$("#taskSubmit").on("click", function(){
		
		sweetConfirmCreate();
		
	});
	$("#taskAuto").on("click", function(){
		$('#subject_title').val("데이터베이스 설계 과제");	
		
		var taskContent = `요구 분석 : 게임은 유저, 캐릭터, 아이템, NPC, 몬스터, 맵 등으로 구성되어 있다. 유저에 대한 정보는 회원 가입 시 기술한 이름(실명), 닉네임, 
						생년월일, 이메일, 추가한 친구로 구성되어 있고, 유저 한 명은 게임 내에서 마법사와 전사, 도적, 궁수 등의 4가지 직업으로 이루어져 있는 
						캐릭터들 중 1개를 골라 생성 할 수 있다. 유저의 이메일은 타 유저의 이메일과 겹칠 수 없다. 캐릭터는 유저가 캐릭터 생성시 등록한 고유한 
						닉네임을 갖게 되며, 몬스터 사냥과 퀘스트 수행을 통해 경험치 획득이 가능하고, 그에 따라 레벨을 올릴 수 있다. 몬스터는 종류에 따라
						캐릭터가 사냥시 획득 가능한 경험치와 아이템으로 이루어져 있고, 일정한 맵에 배치되어 있다. 아이템은 무기와 물약과 스크롤 등의 종류로 
						이루어져 있으며, 그에 따른 아이템의 명칭은 전부 다르나 효능은 겹칠 수도 있다. 캐릭터는 직업에 따라 각각 다른 무기 아이템을 사용할 수 있다. 
						NPC는 고유한 이름을 갖고 있고, 각각 다른 임무를 부여할 수 있으며, 모든 맵에 배치 되어 있진 않다. 맵은 지명과 각 지역간의 이동 방법을 표시한다. 
						또한 NPC는 플레이어에게 임무를 의뢰하여 유저의 게임 진행을 돕고, 임무를 수행 하면 그에 따른 적절한 보상을 준다. 임무 수행 보상으로는 경험치, 무기 아이템 등이 있다.`;
		
		CKEDITOR.instances['taskCon'].setData(taskContent);
		
	    var currentDate = new Date();

	    currentDate.setDate(currentDate.getDate() + 3);

	    var futureDate = currentDate.toISOString().split('T')[0];
	    $('#taskEddt').val(futureDate);
	    
	    var fakeInput = document.getElementById('ATTACH_LOCAL_FILE_ELEMENT_ID');
	    var fakeClick = document.createEvent('MouseEvents');
	    fakeClick.initEvent('click', true, true);
	    fakeInput.dispatchEvent(fakeClick);
		
	});
	CKEDITOR.replace('taskCon', {
		filebrowserUploadUrl:'/professor/fileuploadCKTask?${_csrf.parameterName}=${_csrf.token}',
		height: 600
	});
	CKEDITOR.config.allowedContent = true;
	
	function copyContent(){
		   $("#taskCon").html(window.editor.getData());
		   return true;
	}
	function sweetConfirmCreate() {
	    Swal.fire({
	        text: "과제를 등록 하시겠습니까?",
	        icon: "question",
	        width: 300,
	        showCancelButton: true,
	        confirmButtonColor: "#3085d6",
	        cancelButtonColor: "#d33",
	        confirmButtonText: "네",
	        cancelButtonText: "아니오"
	    }).then((result) => {
	        console.log(result);
	        if (result.isConfirmed) {
	        	$("#taskFrm").submit();
	        } else {
	            alertError('등록을 취소하였습니다.');
	        }
	    });
	}
	
});
</script> 
